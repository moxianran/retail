<?php

namespace frontend\controllers;

use app\models\RNoticeGame;
use app\models\RRechargeRecord;
use app\models\RUser;
use app\models\RUserGame;
use yii\web\Controller;


class MemberController extends Controller
{
    public $enableCsrfValidation = false;
    public $userInfo = [];

    public function init()
    {
        parent::init(); // TODO: Change the autogenerated stub

        $session = \Yii::$app->session;
        $this->userInfo = $session->get('userInfo');
        if (!$this->userInfo) {
            return $this->redirect(['/']);
        }
    }

    /**
     * 用户中心
     */
    public function actionMember()
    {
        $gameNotice = $this->getGameNotice();

        $user = RUser::find()->where(['id' => $this->userInfo['id']])->asArray()->one();

        return $this->render('member', [
            'gameNotice' => $gameNotice,
            'user' => $user
        ]);
    }

    /**
     * 充值记录
     */
    public function actionRecharge()
    {
        $gameNotice = $this->getGameNotice();

        $page = \Yii::$app->request->get('page', 1);
        $startDate = \Yii::$app->request->get('startDate','');
        $endDate = \Yii::$app->request->get('endDate','');


        $where = [];
        if(!empty($startDate) && !empty($endDate)) {
            $where = ['between','create_time',strtotime($startDate),strtotime($endDate)];
        }


        $userGame = RUserGame::find()->where(['user_id' => $this->userInfo['id']])->asArray()->all();
        $userGame = array_column($userGame, 'game_account', 'game_id');

        $query = RRechargeRecord::find()->where(['user_id' => $this->userInfo['id']])->andWhere($where);
        $count = $query->count();

        $offset = ($page - 1) * 10;

        $recharge = $query->offset($offset)->limit(10)->orderBy('id desc')->asArray()->all();

        if ($recharge) {
            foreach ($recharge as $k => $v) {
                $recharge[$k]['account'] = $userGame[$v['game_type']] ?? '--';
            }
        }
        $totalPage = ceil($count / 10);

        return $this->render('recharge', [
            'gameNotice' => $gameNotice,
            'recharge' => $recharge,
            'count' => $count,
            'totalPage' => $totalPage,
            'page' => $page,
            'startDate' => $startDate,
            'endDate' => $endDate,
        ]);
    }

    /**
     * 获取游戏通知
     * @return mixed|string
     */
    private function getGameNotice()
    {
        $gameNotice = RNoticeGame::find()->where(['status' => 1])->orderBy('id desc')->asArray()->one();
        if ($gameNotice) {
            return $gameNotice['content'];
        } else {
            return '';
        }
    }


}